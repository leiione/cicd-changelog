version: 2.1

executors:
  node-executor:
    docker:
      - image: node:18
    environment:
      AWS_REGION: us-east-1

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install AWS CLI and less
          command: |
            apt-get update && apt-get install -y awscli less
      - run:
          name: Check AWS CLI Installation
          command: aws --version
      - run:
          name: Download .env file from S3
          command: |
            BRANCH_NAME=${CIRCLE_BRANCH}
            if [ "$BRANCH_NAME" == "develop" ]; then
              ENV_FILE=".env.staging.txt"
            elif [ "$BRANCH_NAME" == "master" ]; then
              ENV_FILE=".env.production.txt"
            else
              echo "No Environment file needed for this branch" && exit 0
            fi
            aws s3 cp s3://crm-art/crm-envs-fe/$ENV_FILE .env
            echo "Using Environment file: $ENV_FILE"
      - persist_to_workspace:
          root: .
          paths:
            - .env

  deploy:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apt-get update && apt-get install -y awscli
      - run:
          name: Check AWS CLI Installation
          command: aws --version
      - run:
          name: Configure AWS CLI
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_REGION
      - run:
          name: Disable AWS CLI pager
          command: |
            export AWS_PAGER=""
      - run:
          name: Debug AWS Credentials
          command: aws sts get-caller-identity
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy Application
          command: |
            BRANCH_NAME=${CIRCLE_BRANCH}
            if [ "$BRANCH_NAME" == "develop" ]; then
              S3_BUCKET="staging"
            elif [ "$BRANCH_NAME" == "master" ]; then
              S3_BUCKET="production"
            else
              S3_BUCKET="$BRANCH_NAME"
            fi
            aws s3 sync /workspace/dist/ s3://microfrontend-crm-ms/$S3_BUCKET/ --acl public-read
            echo "Application deployed to s3://microfrontend-crm-ms/$S3_BUCKET/"
      - run:
          name: Invalidate CloudFront Cache
          command: |
            CLOUDFRONT_DIST_ID=E27YPOVXTAAHKM
            INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*" --query "Invalidation.Id" --output text --no-cli-pager)

            echo "Waiting for CloudFront Invalidation ID: $INVALIDATION_ID"
            while true; do
              STATUS=$(aws cloudfront get-invalidation --distribution-id $CLOUDFRONT_DIST_ID --id $INVALIDATION_ID --query "Invalidation.Status" --output text --no-cli-pager)
              echo "Invalidation Status: $STATUS"
              if [ "$STATUS" == "Completed" ]; then
                echo "Invalidation Completed!"
                break
              fi
              sleep 10  # Wait for 10 seconds before checking again
            done

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
