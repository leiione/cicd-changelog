version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:18.20.2

jobs:
  deploy-to-production:
    executor: node-executor
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: npm install --legacy-peer-deps

      - run:
          name: Build application
          command: CI=false npm run build

      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update && sudo apt-get install -y unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

      - run:
          name: Download .env from S3
          command: |
            aws s3 cp s3://crm-art/crm-envs-fe/.env.live.txt .env
            echo "Downloaded .env"

      - run:
          name: Deploy to S3 /prod
          command: |
            aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
            aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
            aws configure set region "$AWS_REGION"

            mkdir dist && cp -r build/* dist/
            echo "Build Timestamp: $(date -u)" > dist/deploy_info.txt

            aws s3 sync dist/ s3://microfrontend-crm-ms/prod/ \
              --acl public-read \
              --cache-control "no-cache, no-store, must-revalidate" \
              --metadata-directive REPLACE \
              --delete

      - run:
          name: Invalidate CloudFront Cache
          command: |
            CLOUDFRONT_DIST_ID=E27YPOVXTAAHKM
            INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/prod/*" --query "Invalidation.Id" --output text --no-cli-pager)

            echo "Waiting for CloudFront Invalidation ID: $INVALIDATION_ID"
            while true; do
              STATUS=$(aws cloudfront get-invalidation --distribution-id $CLOUDFRONT_DIST_ID --id $INVALIDATION_ID --query "Invalidation.Status" --output text --no-cli-pager)
              echo "Invalidation Status: $STATUS"
              if [ "$STATUS" == "Completed" ]; then
                echo "Invalidation Completed!"
                break
              fi
              sleep 10
            done

workflows:
  version: 2
  deploy:
    jobs:
      - deploy-to-production:
          filters:
            branches:
              only:
                - master
