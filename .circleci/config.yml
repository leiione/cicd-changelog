version: 2.1

executors:
  node-executor:
    docker:
      - image: node:18

jobs:
  build:
    executor: node-executor
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: npm install --legacy-peer-deps

      - run:
          name: Build the application
          command: npm run build

      - run:
          name: Install zip utility
          command: |
            apt-get update
            apt-get install -y zip

      - run:
          name: Zip the build artifacts
          command: |
            mkdir dist && cp -r build/* dist/
            zip -r build.zip dist

      - persist_to_workspace:
          root: .
          paths:
            - build.zip

  deploy:
    docker:
      - image: node:18  # For AWS CLI
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run:
          name: Install Prerequisites
          command: |
            apt-get update
            apt-get install -y unzip less

      - run:
          name: Install AWS CLI
          command: |
            apt-get update
            apt-get install -y unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install

      - run:
          name: Configure AWS CLI
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_REGION

      - run:
          name: Upload to S3
          command: |
            BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            S3_BUCKET=microfrontend-crm-ms
            aws s3 cp /workspace/build.zip s3://$S3_BUCKET/$BRANCH_NAME/build.zip --acl public-read

      - run:
          name: Invalidate CloudFront Cache
          command: |
            CLOUDFRONT_DIST_ID=E27YPOVXTAAHKM
            BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*"
            echo "Microfrontend is accessible at: https://microfrontend-crm-ms/$BRANCH_NAME"

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
