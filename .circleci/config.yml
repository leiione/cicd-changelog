version: 2.1

executors:
  node-executor:
    docker:
      - image: node:18

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install --legacy-peer-deps
      - run:
          name: Build the application
          command: npm run build
      - run:
          name: Install zip Utility
          command: apt-get update && apt-get install -y unzip
      - run:
          name: Zip the build artifacts
          command: |
            mkdir dist && cp -r build/* dist/
            zip -r build.zip dist
      - persist_to_workspace:
          root: .
          paths:
            - build.zip

  deploy:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run:
          name: Install prerequisites
          command: |
            apt-get update
            apt-get install -y unzip less
      - run:
          name: Install AWS CLI
          command: |
            apt-get update && apt-get install -y unzip
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
      - run:
          name: Configure AWS CLI
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_REGION
      - run:
          name: Upload to S3
          command: |
            BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
            S3_BUCKET=s3://microfrontend-crm-ms/
            aws s3 cp /workspace/build.zip s3://$S3_BUCKET/$BRANCH_NAME/build.zip --acl public-read
      - run:
          name: Invalidate Cloudfront Cache
          command: |
            CLOUDFRONT_DIST_ID=E27YPOVXTAAHKM
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*"
      - run:
          name: Notify RingCentral
          command: |
            curl --location --request POST 'https://hooks.ringcentral.com/webhook/v2/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvdCI6ImMiLCJvaSI6IjE0MjkyMDkwODkiLCJpZCI6IjI4MDk1NjkzMDcifQ.-WyR3x9Z_s0YYvmeB39uTLpTu0eWQYO9iSU-xu1U50Q' \
            --header 'Content-Type: application/json' \
            --data "$(jq -n --arg activity "Microfrontend New Deployment Notification" \
                      --arg title "Visp ${CIRCLE_TAG} client: released to App" \
                      --arg body "[changelog/updates](https://github.com/VISPdevteam/Tickets-Micro-Frontend/releases/tag/${CIRCLE_TAG})" \
                      --arg icon "https://yt3.ggpht.com/a/AGF-l7_s7iCi6dgwawf4rkbIMwUo6WpZLkYw0k9h4w=s100-c-k-c0xffffffff-no-rj-mo" \
                      --argjson build_num ${CIRCLE_BUILD_NUM} \
                      --arg build_url "${CIRCLE_BUILD_URL}" \
                      --arg vcs_url "${CIRCLE_REPOSITORY_URL}" \
                      --arg branch "${CIRCLE_BRANCH}" \
                      --arg reponame "${CIRCLE_PROJECT_REPONAME}" \
                      --arg username "${CIRCLE_USERNAME}" \
                      --arg commit_hash "${CIRCLE_SHA1}" \
                      --arg status "success" \
                      '{payload: {activity: $activity, title: $title, body: $body, icon: $icon, build_num: $build_num, build_url: $build_url, vcs_url: $vcs_url, branch: $branch, reponame: $reponame, username: $username, commit_hash: $commit_hash, status: $status}}')"

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
