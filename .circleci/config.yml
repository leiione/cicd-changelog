version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:18.20.2

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install dependencies & tools
          command: |
            sudo apt-get update && sudo apt-get install -y tar unzip less zip
            curl -sSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            unzip awscliv2.zip && sudo ./aws/install
            npm install --legacy-peer-deps
      - run:
          name: Download environment config
          command: |
            if [ "$CIRCLE_BRANCH" == "develop" ]; then
              ENV_FILE=".env.tbd-staging.txt"
            elif [[ "$CIRCLE_BRANCH" == crm-hotfix-* ]] || [[ "$CIRCLE_BRANCH" == "master" ]]; then
              ENV_FILE=".env.tbd-production.txt"
            elif [[ "$CIRCLE_BRANCH" == crm-slrb-* ]]; then
              ENV_FILE=".env.tbd-staging.txt"
            elif [ "$CIRCLE_BRANCH" ==~ ^crm-[0-9]+$ ]]; then
              ENV_FILE=".env.staging.txt"
            else
              echo "No .env needed" && exit 0
            fi
            aws s3 cp s3://crm-art/crm-envs-fe/$ENV_FILE .env
      - run: CI=false npm run build
      - run: |
          mkdir dist && cp -r build/* dist/
          zip -r build.zip dist
      - persist_to_workspace:
          root: .
          paths:
            - .env
            - dist

  hold-for-hotfix-approval:
    type: approval

  hold-for-develop-approval:
    type: approval

  deploy-preview:
    docker:
      - image: cimg/node:18.20.2
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy to Preview
          command: |
            aws s3 sync workspace/dist/ s3://microfrontend-crm-ms/${CIRCLE_BRANCH}/ --acl public-read
            aws cloudfront create-invalidation --distribution-id E27YPOVXTAAHKM --paths "/${CIRCLE_BRANCH}/*"
      - run:
          name: Install dependencies & tools
          command: |
            sudo apt-get update && sudo apt-get install -y tar unzip less zip
            curl -sSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            unzip awscliv2.zip && sudo ./aws/install
            npm install --legacy-peer-deps
      - run:
          name: Verify Preview
          command: |
            URL="https://crm-microfrontend.ms-visp.net/${CIRCLE_BRANCH}"
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$URL")
            [[ "$STATUS" =~ ^2|^3 ]] && echo OK || exit 1

  deploy-staging:
    docker:
      - image: cimg/node:18.20.2
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Install dependencies & tools
          command: |
            sudo apt-get update && sudo apt-get install -y tar unzip less zip
            curl -sSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            unzip awscliv2.zip && sudo ./aws/install
            npm install --legacy-peer-deps
      - run:
          name: Deploy to Staging
          command: |
            aws s3 sync workspace/dist/ s3://microfrontend-crm-ms/tbd-staging/ --acl public-read
            aws cloudfront create-invalidation --distribution-id E27YPOVXTAAHKM --paths "/tbd-staging/*"
      - run:
          name: Verify Staging
          command: |
            URL="https://crm-microfrontend.ms-visp.net/tbd-staging"
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$URL")
            [[ "$STATUS" =~ ^2|^3 ]] && echo OK || exit 1

  deploy-production:
    docker:
      - image: cimg/node:18.20.2
    steps:
      - checkout
      - attach_workspace:
          at: workspace

      - run:
          name: Install dependencies & tools
          command: |
            sudo apt-get update && sudo apt-get install -y tar unzip less zip
            curl -sSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            unzip awscliv2.zip && sudo ./aws/install
            npm install --legacy-peer-deps

      - run:
          name: Download production .env file
          command: |
            aws s3 cp s3://crm-art/crm-envs-fe/.env.tbd-production.txt .env
            echo "Downloaded .env.tbd-production.txt for production deployment"

      

      - run:
          name: Deploy to Production
          command: |
            aws s3 sync workspace/dist/ s3://microfrontend-crm-ms/tbd-production/ --acl public-read
            aws cloudfront create-invalidation --distribution-id E27YPOVXTAAHKM --paths "/tbd-production/*"

      - run:
          name: Verify Production
          command: |
            URL="https://crm-microfrontend.ms-visp.net/tbd-production"
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$URL")
            [[ "$STATUS" =~ ^2|^3 ]] && echo OK || exit 1


  deploy-standard:
    docker:
      - image: cimg/node:18.20.2
    steps:
      - checkout
      - attach_workspace:
          at: workspace

      - run:
          name: Validate Deploy Branch Pattern
          command: |
            if [[ "$CIRCLE_BRANCH" == crm-slrb-* ]] || [[ "$CIRCLE_BRANCH" =~ ^crm-[0-9]+$ ]]; then
              echo "Valid branch pattern for deploy-standard: $CIRCLE_BRANCH"
            else
              echo "Invalid branch for deploy-standard: $CIRCLE_BRANCH"
              circleci step halt
            fi

      - run:
          name: Determine Folder
          command: |
            DEPLOY_PATH="$CIRCLE_BRANCH"
            echo "export DEPLOY_PATH=$DEPLOY_PATH" >> $BASH_ENV

      - run:
          name: Install dependencies & tools
          command: |
            sudo apt-get update && sudo apt-get install -y tar unzip less zip
            curl -sSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            unzip awscliv2.zip && sudo ./aws/install
            npm install --legacy-peer-deps

      - run:
          name: Deploy to S3
          command: |
            source $BASH_ENV
            aws s3 sync workspace/dist/ s3://microfrontend-crm-ms/$DEPLOY_PATH/ --acl public-read
            aws cloudfront create-invalidation --distribution-id E27YPOVXTAAHKM --paths "/$DEPLOY_PATH/*"

      - run:
          name: Verify URL
          command: |
            source $BASH_ENV
            URL="https://crm-microfrontend.ms-visp.net/$DEPLOY_PATH"
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$URL")
            [[ "$STATUS" =~ ^2|^3 ]] && echo OK || exit 1

workflows:
  version: 2
  deploy-flow:
    jobs:
      - build
          

      - deploy-standard:
          requires:
            - build
          


      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only:
                - develop

      - hold-for-develop-approval:
          requires:
            - deploy-staging
          filters:
            branches:
              only:
                - develop

      - deploy-production:
          name: deploy-develop-production
          requires:
            - hold-for-develop-approval
          filters:
            branches:
              only:
                - develop

      - deploy-preview:
          requires:
            - build
          filters:
            branches:
              only:
                - /crm-hotfix-.*/

      - hold-for-hotfix-approval:
          requires:
            - deploy-preview
          filters:
            branches:
              only:
                - /crm-hotfix-.*/

      - deploy-production:
          name: deploy-hotfix-production
          requires:
            - hold-for-hotfix-approval
          filters:
            branches:
              only:
                - /crm-hotfix-.*/
